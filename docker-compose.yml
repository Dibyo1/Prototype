version: '3.8'

services:
  truthguard-app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - BUILDKIT_INLINE_CACHE=1
    container_name: truthguard-app
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - FLASK_DEBUG=false
      - PORT=5000
      - SECRET_KEY=${SECRET_KEY:-truthguard-production-secret-change-me}
      # API Keys (optional - set in .env file)
      - VIRUSTOTAL_API_KEY=${VIRUSTOTAL_API_KEY:-}
      - GOOGLE_GENERATIVE_AI_API_KEY=${GOOGLE_GENERATIVE_AI_API_KEY:-}
      - HUGGINGFACE_API_KEY=${HUGGINGFACE_API_KEY:-}
      # Database configuration
      - DATABASE_URL=${DATABASE_URL:-sqlite:///app/truthguard.db}
      # Cache configuration
      - REDIS_URL=${REDIS_URL:-}
      # Logging
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      # Persist models and cache
      - models-data:/app/models
      - cache-data:/app/.cache
      - database-data:/app/data
      # Logs for debugging
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 60s
    networks:
      - truthguard-network
    # Resource limits for production
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  # Optional Redis for enhanced caching (enable if needed)
  redis:
    image: redis:7-alpine
    container_name: truthguard-redis
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - truthguard-network
    profiles:
      - redis  # Start with: docker-compose --profile redis up

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: truthguard-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro  # SSL certificates if available
    depends_on:
      - truthguard-app
    restart: unless-stopped
    networks:
      - truthguard-network
    profiles:
      - production  # Start with: docker-compose --profile production up

  # Development override service
  truthguard-dev:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: truthguard-dev
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=true
      - PORT=5000
    volumes:
      # Mount source code for development
      - .:/app
      - models-data:/app/models
      - cache-data:/app/.cache
    command: ["python", "app.py"]
    restart: "no"  # Don't restart in dev mode
    networks:
      - truthguard-network
    profiles:
      - development  # Start with: docker-compose --profile development up

networks:
  truthguard-network:
    driver: bridge
    name: truthguard-network

volumes:
  models-data:
    driver: local
    name: truthguard-models
  cache-data:
    driver: local
    name: truthguard-cache
  database-data:
    driver: local
    name: truthguard-database
  redis-data:
    driver: local
    name: truthguard-redis
  logs-data:
    driver: local
    name: truthguard-logs